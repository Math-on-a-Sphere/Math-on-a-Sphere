/* Jison generated parser */
var grammar = (function(){

var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"program":3,"weblogo":4,"EOF":5,"block":6,"statements":7,"{":8,"}":9,"statement":10,"assignment":11,"function":12,"repeat_stmt":13,"if_stmt":14,"identifier":15,"=":16,"expr":17,"FUNCTION":18,"(":19,")":20,"param_list":21,"builtin_null":22,"arguments":23,"set_stmt":24,"REPEAT":25,"IF":26,"logic_expr":27,"ELSE":28,"SET":29,"value":30,"CLEARALL":31,"CLEARDRAWING":32,"PENUP":33,"PENDOWN":34,"GETHEADING":35,"GETPOSITION":36,"GETSPEED":37,"HELP":38,"DEMO":39,"TESTCARD":40,"TESTHEADING":41,"re":42,"-":43,"JSONArray":44,"+":45,"*":46,"/":47,"==":48,"<":49,">":50,"number":51,"string":52,"boolean":53,"JSONObject":54,"IDENTIFIER":55,"STRING":56,"NUMBER":57,"E":58,"PI":59,"TRUE":60,"FALSE":61,"JSONMemberList":62,"JSONMember":63,",":64,":":65,"[":66,"]":67,"JSONElementList":68,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",8:"{",9:"}",16:"=",18:"FUNCTION",19:"(",20:")",25:"REPEAT",26:"IF",28:"ELSE",29:"SET",31:"CLEARALL",32:"CLEARDRAWING",33:"PENUP",34:"PENDOWN",35:"GETHEADING",36:"GETPOSITION",37:"GETSPEED",38:"HELP",39:"DEMO",40:"TESTCARD",41:"TESTHEADING",43:"-",45:"+",46:"*",47:"/",48:"==",49:"<",50:">",55:"IDENTIFIER",56:"STRING",57:"NUMBER",58:"E",59:"PI",60:"TRUE",61:"FALSE",64:",",65:":",66:"[",67:"]"},
productions_: [0,[3,2],[4,1],[4,1],[6,3],[7,2],[7,1],[10,1],[10,1],[10,1],[10,1],[11,3],[11,6],[11,5],[12,1],[12,2],[12,4],[12,1],[13,3],[14,3],[14,5],[24,3],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[22,1],[17,1],[17,2],[17,1],[23,3],[23,1],[23,1],[42,3],[42,3],[42,3],[42,3],[42,3],[42,3],[42,1],[27,3],[27,3],[27,3],[27,3],[21,1],[21,3],[30,2],[30,1],[30,1],[30,1],[30,1],[30,1],[15,1],[52,1],[51,1],[51,1],[51,1],[53,1],[53,1],[54,2],[54,3],[62,1],[62,3],[63,3],[44,2],[44,3],[68,1],[68,3]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1:return $$[$0-1];
break;
case 2:this.$ = {};
   this.$['type'] = 'weblogo';
   this.$['handler'] = 'skip';
   this.$['value'] = $$[$0];
break;
case 3:this.$ = {};
   this.$['type'] = 'weblogo';
   this.$['handler'] = 'skip';
   this.$['value'] = $$[$0];
break;
case 4:this.$ = {};
    this.$['type'] = 'block';
    this.$['handler'] = 'block';
    this.$['value'] = $$[$0-1];
break;
case 5:this.$ = $$[$0]; 
    $$[$0].unshift($$[$0-1]);
break;
case 6:this.$ = [$$[$0]];
break;
case 7:this.$ = {};
    this.$['type'] = 'statement';
    this.$['handler'] = 'statement';
    this.$['value'] = $$[$0];
break;
case 8:this.$ = {};
    this.$['type'] = 'statement';
    this.$['handler'] = 'statement';
    this.$['value'] = $$[$0];
break;
case 9:this.$ = {};
   this.$['type'] = 'repeat';
   this.$['handler'] = 'statement';
   this.$['value'] = $$[$0];
break;
case 10:this.$ = {};
   this.$['type'] = 'if';
   this.$['handler'] = 'statement';
   this.$['value'] = $$[$0];
break;
case 11:this.$ = {};
    this.$['type'] = 'assignment';
    this.$['handler'] = 'var_assign';
    this.$['id'] = $$[$0-2];
    this.$['value'] = $$[$0];
break;
case 12:this.$ = {};
    this.$['type'] = 'assignment';
    this.$['handler'] = 'fun_assign';
    this.$['id'] = $$[$0-5];
    this.$['args'] = {};
    this.$['args']['type'] = 'dummy';
    this.$['args']['handler'] = 'list';
    this.$['args']['value'] = [];
    this.$['block'] = $$[$0];
break;
case 13:this.$ = {};
    this.$['type'] = 'assignment';
    this.$['handler'] = 'fun_assign';
    this.$['id'] = $$[$0-4];
    this.$['args'] = $$[$0-1];
    this.$['block'] = $$[$0];
break;
case 14:this.$ = {};
   this.$['type'] = 'function';
   this.$['handler'] = 'skip';
   this.$['value'] = $$[$0];
break;
case 15:this.$ = {}; 
    this.$['type'] = 'function';
    this.$['handler'] = 'func';
    this.$['id'] = $$[$0-1];
    this.$['args'] = $$[$0];
break;
case 16:this.$ = {};
    this.$['type'] = 'function';
    this.$['handler'] = 'func';
    this.$['id'] = $$[$0-3];
    this.$['args'] = $$[$0-2];
break;
case 17:this.$ = {};
   this.$['type'] = 'function';
   this.$['handler'] = 'skip';
   this.$['value'] = $$[$0];
break;
case 18:this.$ = {}; 
    this.$['type'] = 'repeat_stmt'; 
    this.$['handler'] = 'repeat_stmt'; 
    this.$['args'] = [$$[$0-1], $$[$0]];
break;
case 19:this.$ = {};
    this.$['type'] = 'if_stmt';
    this.$['handler'] = 'if_stmt';
    this.$['condition'] = $$[$0-1];
    this.$['block'] = $$[$0];
break;
case 20:this.$ = {};
    this.$['type'] = 'if_stmt';
    this.$['handler'] = 'ifelse_stmt';
    this.$['condition'] = $$[$0-3];
    this.$['block'] = [$$[$0-2], $$[$0]];
break;
case 21:this.$ = {}; 
    this.$['type'] = 'set_stmt'; 
    this.$['handler'] = 'set_stmt'; 
    this.$['args'] = [$$[$0-1], $$[$0]];
break;
case 22:this.$ = {};
    this.$['type'] = 'builtin_null';
    this.$['handler'] = 'builtin';
    this.$['id'] = 'clearall';
    this.$['args'] = [];
break;
case 23:this.$ = {};
    this.$['type'] = 'builtin_null';
    this.$['handler'] = 'builtin';
    this.$['id'] = 'cleardrawing';
    this.$['args'] = [];
break;
case 24:this.$ = {};
    this.$['type'] = 'builtin_null';
    this.$['handler'] = 'builtin';
    this.$['id'] = 'penup';
    this.$['args'] = [];
break;
case 25:this.$ = {};
    this.$['type'] = 'builtin_null';
    this.$['handler'] = 'builtin';
    this.$['id'] = 'pendown';
    this.$['args'] = [];
break;
case 26:this.$ = {};
    this.$['type'] = 'builtin_null';
    this.$['handler'] = 'builtin';
    this.$['id'] = 'getheading';
    this.$['args'] = [];
break;
case 27:this.$ = {};
    this.$['type'] = 'builtin_null';
    this.$['handler'] = 'builtin';
    this.$['id'] = 'getposition';
    this.$['args'] = [];
break;
case 28:this.$ = {};
    this.$['type'] = 'builtin_null';
    this.$['handler'] = 'builtin';
    this.$['id'] = 'getspeed';
    this.$['args'] = [];
break;
case 29:this.$ = {};
    this.$['type'] = 'builtin_null';
    this.$['handler'] = 'builtin';
    this.$['id'] = 'help';
    this.$['args'] = [];
break;
case 30:this.$ = {};
    this.$['type'] = 'builtin_null';
    this.$['handler'] = 'builtin';
    this.$['id'] = 'demo';
    this.$['args'] = [];
break;
case 31:this.$ = {};
    this.$['type'] = 'builtin_null';
    this.$['handler'] = 'builtin';
    this.$['id'] = 'testcard';
    this.$['args'] = [];
break;
case 32:this.$ = {};
    this.$['type'] = 'builtin_null';
    this.$['handler'] = 'builtin';
    this.$['id'] = 'testheading';
    this.$['args'] = [];
break;
case 33:this.$ = {};
   this.$['type'] = 'expr';
   this.$['handler'] = 'expr';
   this.$['value'] = $$[$0];
break;
case 34:this.$ = {};
   this.$['type'] = 'expr';
   this.$['handler'] = 'uminus';
   this.$['value'] = $$[$0];
break;
case 35:this.$ = {};
   this.$['type'] = 'expr';
   this.$['handler'] = 'expr';
   this.$['value'] = $$[$0];
break;
case 36:this.$ = {};
    this.$['type'] = 'arguments';
    this.$['handler'] = 'skip';
    this.$['value'] = [$$[$0-1]];
break;
case 37:this.$ = {};
   this.$['type'] = 'arguments';
   this.$['handler'] = 'skip';
   this.$['value'] = [$$[$0]];
break;
case 38:this.$ = {};
   this.$['type'] = 'arguments';
   this.$['handler'] = 'skip';
   this.$['value'] = $$[$0];
break;
case 39:this.$ = {};
   this.$['type'] = 're';
   this.$['handler'] = 'op';
   this.$['op'] = '+';
   this.$['args'] = [$$[$0-2],$$[$0]];
break;
case 40:this.$ = {};
   this.$['type'] = 're';
   this.$['handler'] = 'op';
   this.$['op'] = '-';
   this.$['args'] = [$$[$0-2],$$[$0]];
break;
case 41:this.$ = {};
   this.$['type'] = 're';
   this.$['handler'] = 'op';
   this.$['op'] = '*';
   this.$['args'] = [$$[$0-2],$$[$0]];
break;
case 42:this.$ = {};
   this.$['type'] = 're';
   this.$['handler'] = 'op';
   this.$['op'] = '/';
   this.$['args'] = [$$[$0-2],$$[$0]];
break;
case 43:this.$ = {};
   this.$['type'] = 're';
   this.$['handler'] = 'group_op';
   this.$['args'] = [$$[$0-1]];
break;
case 44:this.$ = {};
   this.$['type'] = 're';
   this.$['handler'] = 'skip';
   this.$['value'] = $$[$0-1];
break;
case 45:this.$ = {};
   this.$['type'] = 're';
   this.$['handler'] = 'skip';
   this.$['value'] = $$[$0];
break;
case 46:this.$ = $$[$0-1];
break;
case 47:this.$ = {};
   this.$['type'] = 'logic_expr';
   this.$['handler'] = 'op';
   this.$['op'] = '==';
   this.$['args'] = [$$[$0-2],$$[$0]];
break;
case 48:this.$ = {};
   this.$['type'] = 'logic_expr';
   this.$['handler'] = 'op';
   this.$['op'] = '<';
   this.$['args'] = [$$[$0-2],$$[$0]];
break;
case 49:this.$ = {};
   this.$['type'] = 'logic_expr';
   this.$['handler'] = 'op';
   this.$['op'] = '>';
   this.$['args'] = [$$[$0-2],$$[$0]];
break;
case 50:this.$ = {};
  this.$['type'] = 'param_list';
  this.$['handler'] = 'skip';
  this.$['value'] = $$[$0];
break;
case 51:this.$ = {};
  this.$['type'] = 'param_list';
  this.$['handler'] = 'skip';
  this.$['value'] = $$[$0-1];
break;
case 52:this.$ = {};
    this.$['type'] = 'value';
    this.$['handler'] = 'list';
    this.$['value'] = [];
break;
case 53:this.$ = {};
    this.$['type'] = 'value';
    this.$['handler'] = 'skip';
    this.$['value'] = $$[$0];
break;
case 54:this.$ = {};
    this.$['type'] = 'value';
    this.$['handler'] = 'skip';
    this.$['value'] = $$[$0];
break;
case 55:this.$ = {};
    this.$['type'] = 'value';
    this.$['handler'] = 'skip';
    this.$['value'] = $$[$0];
break;
case 56:this.$ = {};
    this.$['type'] = 'value';
    this.$['handler'] = 'skip';
    this.$['value'] = $$[$0];
break;
case 57:this.$ = {};
   this.$['type'] = 'value';
   this.$['handler'] = 'skip';
   this.$['value'] = $$[$0];
break;
case 58:this.$ = {};
    this.$['type'] = 'identifier';
    this.$['handler'] = 'value';
    this.$['value'] = yytext;
break;
case 59:this.$ = {};
    this.$['type'] = 'string';
    this.$['handler'] = 'value';
    this.$['value'] = yytext;
break;
case 60:this.$ = {};
    this.$['type'] = 'number';
    this.$['handler'] = 'value';
    this.$['value'] = Number(yytext);
break;
case 61:this.$ = {};
    this.$['type'] = 'number';
    this.$['handler'] = 'value';
    this.$['value'] = Math.E;
break;
case 62:this.$ = {};
    this.$['type'] = 'number';
    this.$['handler'] = 'value';
    this.$['value'] = Math.PI;
break;
case 63:this.$ = {};
    this.$['type'] = 'boolean';
    this.$['handler'] = 'value';
    this.$['value'] = true;
break;
case 64:this.$ = {};
    this.$['type'] = 'boolen';
    this.$['handler'] = 'value';
    this.$['value'] = false;
break;
case 65:this.$ = {};
    this.$['type'] = 'JSONObject';
    this.$['handler'] = 'JSONObject';
    this.$['value'] = '{}';
break;
case 66:this.$ = {};
    this.$['type'] = 'JSONObject';
    this.$['handler'] = 'JSONObject';
    this.$['value'] = $$[$0-1];
break;
case 67:this.$ = {}; 
    this.$['type'] = 'JSONMemberList';
    this.$['handler'] = 'JSONMember';
    this.$[$$[$0][0]] = $$[$0][1];
break;
case 68:this.$ = $$[$0-2]; $$[$0-2][$$[$0][0]] = $$[$0][1];
break;
case 69:this.$ = {};
    this.$['type'] = 'JSONMenber';
    this.$['handler'] = 'JSONMenber';
    this.$['value'] = [$$[$0-2], $$[$0]];
break;
case 70:this.$ = {};
    this.$['type'] = 'JSONArray';
    this.$['handler'] = 'list';
    this.$['value'] = [];
break;
case 71:this.$ = {};
    this.$['type'] = 'JSONArray';
    this.$['handler'] = 'list';
    this.$['value'] = $$[$0-1];
break;
case 72:this.$ = [$$[$0]];
break;
case 73:this.$ = $$[$0]; 
    $$[$0].unshift($$[$0-2]);
break;
}
},
table: [{3:1,4:2,6:3,7:4,8:[1,5],10:6,11:7,12:8,13:9,14:10,15:11,19:[1,13],22:12,24:14,25:[1,15],26:[1,16],29:[1,29],31:[1,18],32:[1,19],33:[1,20],34:[1,21],35:[1,22],36:[1,23],37:[1,24],38:[1,25],39:[1,26],40:[1,27],41:[1,28],55:[1,17]},{1:[3]},{5:[1,30]},{5:[2,2]},{5:[2,3]},{7:31,10:6,11:7,12:8,13:9,14:10,15:11,19:[1,13],22:12,24:14,25:[1,15],26:[1,16],29:[1,29],31:[1,18],32:[1,19],33:[1,20],34:[1,21],35:[1,22],36:[1,23],37:[1,24],38:[1,25],39:[1,26],40:[1,27],41:[1,28],55:[1,17]},{5:[2,6],7:32,9:[2,6],10:6,11:7,12:8,13:9,14:10,15:11,19:[1,13],22:12,24:14,25:[1,15],26:[1,16],29:[1,29],31:[1,18],32:[1,19],33:[1,20],34:[1,21],35:[1,22],36:[1,23],37:[1,24],38:[1,25],39:[1,26],40:[1,27],41:[1,28],55:[1,17]},{5:[2,7],9:[2,7],19:[2,7],25:[2,7],26:[2,7],29:[2,7],31:[2,7],32:[2,7],33:[2,7],34:[2,7],35:[2,7],36:[2,7],37:[2,7],38:[2,7],39:[2,7],40:[2,7],41:[2,7],55:[2,7]},{5:[2,8],9:[2,8],19:[2,8],25:[2,8],26:[2,8],29:[2,8],31:[2,8],32:[2,8],33:[2,8],34:[2,8],35:[2,8],36:[2,8],37:[2,8],38:[2,8],39:[2,8],40:[2,8],41:[2,8],55:[2,8]},{5:[2,9],9:[2,9],19:[2,9],25:[2,9],26:[2,9],29:[2,9],31:[2,9],32:[2,9],33:[2,9],34:[2,9],35:[2,9],36:[2,9],37:[2,9],38:[2,9],39:[2,9],40:[2,9],41:[2,9],55:[2,9]},{5:[2,10],9:[2,10],19:[2,10],25:[2,10],26:[2,10],29:[2,10],31:[2,10],32:[2,10],33:[2,10],34:[2,10],35:[2,10],36:[2,10],37:[2,10],38:[2,10],39:[2,10],40:[2,10],41:[2,10],55:[2,10]},{8:[1,50],15:38,16:[1,33],19:[1,35],23:34,30:36,44:37,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49],66:[1,43]},{5:[2,14],9:[2,14],19:[2,14],20:[2,14],25:[2,14],26:[2,14],29:[2,14],31:[2,14],32:[2,14],33:[2,14],34:[2,14],35:[2,14],36:[2,14],37:[2,14],38:[2,14],39:[2,14],40:[2,14],41:[2,14],55:[2,14]},{12:51,15:52,19:[1,13],22:12,24:14,29:[1,29],31:[1,18],32:[1,19],33:[1,20],34:[1,21],35:[1,22],36:[1,23],37:[1,24],38:[1,25],39:[1,26],40:[1,27],41:[1,28],55:[1,17]},{5:[2,17],9:[2,17],19:[2,17],20:[2,17],25:[2,17],26:[2,17],29:[2,17],31:[2,17],32:[2,17],33:[2,17],34:[2,17],35:[2,17],36:[2,17],37:[2,17],38:[2,17],39:[2,17],40:[2,17],41:[2,17],55:[2,17]},{8:[1,50],15:38,17:53,19:[1,57],27:56,30:58,42:54,43:[1,55],51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{8:[1,50],15:38,19:[1,57],27:59,30:58,42:60,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{5:[2,58],8:[2,58],9:[2,58],16:[2,58],19:[2,58],20:[2,58],25:[2,58],26:[2,58],29:[2,58],31:[2,58],32:[2,58],33:[2,58],34:[2,58],35:[2,58],36:[2,58],37:[2,58],38:[2,58],39:[2,58],40:[2,58],41:[2,58],43:[2,58],45:[2,58],46:[2,58],47:[2,58],48:[2,58],49:[2,58],50:[2,58],55:[2,58],56:[2,58],57:[2,58],58:[2,58],59:[2,58],60:[2,58],61:[2,58],64:[2,58],66:[2,58],67:[2,58]},{5:[2,22],9:[2,22],19:[2,22],20:[2,22],25:[2,22],26:[2,22],29:[2,22],31:[2,22],32:[2,22],33:[2,22],34:[2,22],35:[2,22],36:[2,22],37:[2,22],38:[2,22],39:[2,22],40:[2,22],41:[2,22],55:[2,22]},{5:[2,23],9:[2,23],19:[2,23],20:[2,23],25:[2,23],26:[2,23],29:[2,23],31:[2,23],32:[2,23],33:[2,23],34:[2,23],35:[2,23],36:[2,23],37:[2,23],38:[2,23],39:[2,23],40:[2,23],41:[2,23],55:[2,23]},{5:[2,24],9:[2,24],19:[2,24],20:[2,24],25:[2,24],26:[2,24],29:[2,24],31:[2,24],32:[2,24],33:[2,24],34:[2,24],35:[2,24],36:[2,24],37:[2,24],38:[2,24],39:[2,24],40:[2,24],41:[2,24],55:[2,24]},{5:[2,25],9:[2,25],19:[2,25],20:[2,25],25:[2,25],26:[2,25],29:[2,25],31:[2,25],32:[2,25],33:[2,25],34:[2,25],35:[2,25],36:[2,25],37:[2,25],38:[2,25],39:[2,25],40:[2,25],41:[2,25],55:[2,25]},{5:[2,26],9:[2,26],19:[2,26],20:[2,26],25:[2,26],26:[2,26],29:[2,26],31:[2,26],32:[2,26],33:[2,26],34:[2,26],35:[2,26],36:[2,26],37:[2,26],38:[2,26],39:[2,26],40:[2,26],41:[2,26],55:[2,26]},{5:[2,27],9:[2,27],19:[2,27],20:[2,27],25:[2,27],26:[2,27],29:[2,27],31:[2,27],32:[2,27],33:[2,27],34:[2,27],35:[2,27],36:[2,27],37:[2,27],38:[2,27],39:[2,27],40:[2,27],41:[2,27],55:[2,27]},{5:[2,28],9:[2,28],19:[2,28],20:[2,28],25:[2,28],26:[2,28],29:[2,28],31:[2,28],32:[2,28],33:[2,28],34:[2,28],35:[2,28],36:[2,28],37:[2,28],38:[2,28],39:[2,28],40:[2,28],41:[2,28],55:[2,28]},{5:[2,29],9:[2,29],19:[2,29],20:[2,29],25:[2,29],26:[2,29],29:[2,29],31:[2,29],32:[2,29],33:[2,29],34:[2,29],35:[2,29],36:[2,29],37:[2,29],38:[2,29],39:[2,29],40:[2,29],41:[2,29],55:[2,29]},{5:[2,30],9:[2,30],19:[2,30],20:[2,30],25:[2,30],26:[2,30],29:[2,30],31:[2,30],32:[2,30],33:[2,30],34:[2,30],35:[2,30],36:[2,30],37:[2,30],38:[2,30],39:[2,30],40:[2,30],41:[2,30],55:[2,30]},{5:[2,31],9:[2,31],19:[2,31],20:[2,31],25:[2,31],26:[2,31],29:[2,31],31:[2,31],32:[2,31],33:[2,31],34:[2,31],35:[2,31],36:[2,31],37:[2,31],38:[2,31],39:[2,31],40:[2,31],41:[2,31],55:[2,31]},{5:[2,32],9:[2,32],19:[2,32],20:[2,32],25:[2,32],26:[2,32],29:[2,32],31:[2,32],32:[2,32],33:[2,32],34:[2,32],35:[2,32],36:[2,32],37:[2,32],38:[2,32],39:[2,32],40:[2,32],41:[2,32],55:[2,32]},{8:[1,50],15:38,19:[1,62],30:61,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{1:[2,1]},{9:[1,63]},{5:[2,5],9:[2,5]},{8:[1,50],15:38,17:64,18:[1,65],19:[1,57],27:56,30:58,42:54,43:[1,55],51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{5:[2,15],9:[2,15],19:[2,15],20:[2,15],25:[2,15],26:[2,15],29:[2,15],31:[2,15],32:[2,15],33:[2,15],34:[2,15],35:[2,15],36:[2,15],37:[2,15],38:[2,15],39:[2,15],40:[2,15],41:[2,15],55:[2,15]},{8:[1,50],15:38,17:66,19:[1,57],20:[1,67],27:56,30:58,42:54,43:[1,55],51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{5:[2,37],9:[2,37],19:[2,37],20:[2,37],25:[2,37],26:[2,37],29:[2,37],31:[2,37],32:[2,37],33:[2,37],34:[2,37],35:[2,37],36:[2,37],37:[2,37],38:[2,37],39:[2,37],40:[2,37],41:[2,37],55:[2,37]},{5:[2,38],9:[2,38],19:[2,38],20:[2,38],25:[2,38],26:[2,38],29:[2,38],31:[2,38],32:[2,38],33:[2,38],34:[2,38],35:[2,38],36:[2,38],37:[2,38],38:[2,38],39:[2,38],40:[2,38],41:[2,38],55:[2,38]},{5:[2,53],8:[2,53],9:[2,53],19:[2,53],20:[2,53],25:[2,53],26:[2,53],29:[2,53],31:[2,53],32:[2,53],33:[2,53],34:[2,53],35:[2,53],36:[2,53],37:[2,53],38:[2,53],39:[2,53],40:[2,53],41:[2,53],43:[2,53],45:[2,53],46:[2,53],47:[2,53],48:[2,53],49:[2,53],50:[2,53],55:[2,53],56:[2,53],57:[2,53],58:[2,53],59:[2,53],60:[2,53],61:[2,53],64:[2,53],67:[2,53]},{5:[2,54],8:[2,54],9:[2,54],19:[2,54],20:[2,54],25:[2,54],26:[2,54],29:[2,54],31:[2,54],32:[2,54],33:[2,54],34:[2,54],35:[2,54],36:[2,54],37:[2,54],38:[2,54],39:[2,54],40:[2,54],41:[2,54],43:[2,54],45:[2,54],46:[2,54],47:[2,54],48:[2,54],49:[2,54],50:[2,54],55:[2,54],56:[2,54],57:[2,54],58:[2,54],59:[2,54],60:[2,54],61:[2,54],64:[2,54],67:[2,54]},{5:[2,55],8:[2,55],9:[2,55],19:[2,55],20:[2,55],25:[2,55],26:[2,55],29:[2,55],31:[2,55],32:[2,55],33:[2,55],34:[2,55],35:[2,55],36:[2,55],37:[2,55],38:[2,55],39:[2,55],40:[2,55],41:[2,55],43:[2,55],45:[2,55],46:[2,55],47:[2,55],48:[2,55],49:[2,55],50:[2,55],55:[2,55],56:[2,55],57:[2,55],58:[2,55],59:[2,55],60:[2,55],61:[2,55],64:[2,55],67:[2,55]},{5:[2,56],8:[2,56],9:[2,56],19:[2,56],20:[2,56],25:[2,56],26:[2,56],29:[2,56],31:[2,56],32:[2,56],33:[2,56],34:[2,56],35:[2,56],36:[2,56],37:[2,56],38:[2,56],39:[2,56],40:[2,56],41:[2,56],43:[2,56],45:[2,56],46:[2,56],47:[2,56],48:[2,56],49:[2,56],50:[2,56],55:[2,56],56:[2,56],57:[2,56],58:[2,56],59:[2,56],60:[2,56],61:[2,56],64:[2,56],67:[2,56]},{5:[2,57],8:[2,57],9:[2,57],19:[2,57],20:[2,57],25:[2,57],26:[2,57],29:[2,57],31:[2,57],32:[2,57],33:[2,57],34:[2,57],35:[2,57],36:[2,57],37:[2,57],38:[2,57],39:[2,57],40:[2,57],41:[2,57],43:[2,57],45:[2,57],46:[2,57],47:[2,57],48:[2,57],49:[2,57],50:[2,57],55:[2,57],56:[2,57],57:[2,57],58:[2,57],59:[2,57],60:[2,57],61:[2,57],64:[2,57],67:[2,57]},{8:[1,50],15:38,17:70,19:[1,57],27:56,30:58,42:54,43:[1,55],51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49],67:[1,68],68:69},{5:[2,60],8:[2,60],9:[2,60],19:[2,60],20:[2,60],25:[2,60],26:[2,60],29:[2,60],31:[2,60],32:[2,60],33:[2,60],34:[2,60],35:[2,60],36:[2,60],37:[2,60],38:[2,60],39:[2,60],40:[2,60],41:[2,60],43:[2,60],45:[2,60],46:[2,60],47:[2,60],48:[2,60],49:[2,60],50:[2,60],55:[2,60],56:[2,60],57:[2,60],58:[2,60],59:[2,60],60:[2,60],61:[2,60],64:[2,60],67:[2,60]},{5:[2,61],8:[2,61],9:[2,61],19:[2,61],20:[2,61],25:[2,61],26:[2,61],29:[2,61],31:[2,61],32:[2,61],33:[2,61],34:[2,61],35:[2,61],36:[2,61],37:[2,61],38:[2,61],39:[2,61],40:[2,61],41:[2,61],43:[2,61],45:[2,61],46:[2,61],47:[2,61],48:[2,61],49:[2,61],50:[2,61],55:[2,61],56:[2,61],57:[2,61],58:[2,61],59:[2,61],60:[2,61],61:[2,61],64:[2,61],67:[2,61]},{5:[2,62],8:[2,62],9:[2,62],19:[2,62],20:[2,62],25:[2,62],26:[2,62],29:[2,62],31:[2,62],32:[2,62],33:[2,62],34:[2,62],35:[2,62],36:[2,62],37:[2,62],38:[2,62],39:[2,62],40:[2,62],41:[2,62],43:[2,62],45:[2,62],46:[2,62],47:[2,62],48:[2,62],49:[2,62],50:[2,62],55:[2,62],56:[2,62],57:[2,62],58:[2,62],59:[2,62],60:[2,62],61:[2,62],64:[2,62],67:[2,62]},{5:[2,59],8:[2,59],9:[2,59],19:[2,59],20:[2,59],25:[2,59],26:[2,59],29:[2,59],31:[2,59],32:[2,59],33:[2,59],34:[2,59],35:[2,59],36:[2,59],37:[2,59],38:[2,59],39:[2,59],40:[2,59],41:[2,59],43:[2,59],45:[2,59],46:[2,59],47:[2,59],48:[2,59],49:[2,59],50:[2,59],55:[2,59],56:[2,59],57:[2,59],58:[2,59],59:[2,59],60:[2,59],61:[2,59],64:[2,59],65:[2,59],67:[2,59]},{5:[2,63],8:[2,63],9:[2,63],19:[2,63],20:[2,63],25:[2,63],26:[2,63],29:[2,63],31:[2,63],32:[2,63],33:[2,63],34:[2,63],35:[2,63],36:[2,63],37:[2,63],38:[2,63],39:[2,63],40:[2,63],41:[2,63],43:[2,63],45:[2,63],46:[2,63],47:[2,63],48:[2,63],49:[2,63],50:[2,63],55:[2,63],56:[2,63],57:[2,63],58:[2,63],59:[2,63],60:[2,63],61:[2,63],64:[2,63],67:[2,63]},{5:[2,64],8:[2,64],9:[2,64],19:[2,64],20:[2,64],25:[2,64],26:[2,64],29:[2,64],31:[2,64],32:[2,64],33:[2,64],34:[2,64],35:[2,64],36:[2,64],37:[2,64],38:[2,64],39:[2,64],40:[2,64],41:[2,64],43:[2,64],45:[2,64],46:[2,64],47:[2,64],48:[2,64],49:[2,64],50:[2,64],55:[2,64],56:[2,64],57:[2,64],58:[2,64],59:[2,64],60:[2,64],61:[2,64],64:[2,64],67:[2,64]},{9:[1,71],52:74,56:[1,47],62:72,63:73},{20:[1,75]},{8:[1,50],15:38,19:[1,35],23:34,30:36,44:37,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49],66:[1,43]},{6:76,8:[1,5]},{5:[2,33],8:[2,33],9:[2,33],19:[2,33],20:[2,33],25:[2,33],26:[2,33],29:[2,33],31:[2,33],32:[2,33],33:[2,33],34:[2,33],35:[2,33],36:[2,33],37:[2,33],38:[2,33],39:[2,33],40:[2,33],41:[2,33],43:[1,78],45:[1,77],46:[1,79],47:[1,80],48:[1,81],49:[1,82],50:[1,83],55:[2,33],64:[2,33],67:[2,33]},{8:[1,50],15:38,19:[1,85],30:58,42:84,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{5:[2,35],8:[2,35],9:[2,35],19:[2,35],20:[2,35],25:[2,35],26:[2,35],29:[2,35],31:[2,35],32:[2,35],33:[2,35],34:[2,35],35:[2,35],36:[2,35],37:[2,35],38:[2,35],39:[2,35],40:[2,35],41:[2,35],55:[2,35],64:[2,35],67:[2,35]},{8:[1,50],12:87,15:90,19:[1,89],20:[1,67],22:12,24:14,27:88,29:[1,29],30:58,31:[1,18],32:[1,19],33:[1,20],34:[1,21],35:[1,22],36:[1,23],37:[1,24],38:[1,25],39:[1,26],40:[1,27],41:[1,28],42:86,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{5:[2,45],8:[2,45],9:[2,45],19:[2,45],20:[2,45],25:[2,45],26:[2,45],29:[2,45],31:[2,45],32:[2,45],33:[2,45],34:[2,45],35:[2,45],36:[2,45],37:[2,45],38:[2,45],39:[2,45],40:[2,45],41:[2,45],43:[2,45],45:[2,45],46:[2,45],47:[2,45],48:[2,45],49:[2,45],50:[2,45],55:[2,45],64:[2,45],67:[2,45]},{6:91,8:[1,5]},{43:[1,78],45:[1,77],46:[1,79],47:[1,80],48:[1,81],49:[1,82],50:[1,83]},{8:[1,50],15:38,17:92,19:[1,57],27:56,30:58,42:54,43:[1,55],51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{20:[1,67]},{5:[2,4],9:[2,4],19:[2,4],25:[2,4],26:[2,4],28:[2,4],29:[2,4],31:[2,4],32:[2,4],33:[2,4],34:[2,4],35:[2,4],36:[2,4],37:[2,4],38:[2,4],39:[2,4],40:[2,4],41:[2,4],55:[2,4]},{5:[2,11],9:[2,11],19:[2,11],25:[2,11],26:[2,11],29:[2,11],31:[2,11],32:[2,11],33:[2,11],34:[2,11],35:[2,11],36:[2,11],37:[2,11],38:[2,11],39:[2,11],40:[2,11],41:[2,11],55:[2,11]},{19:[1,93],21:94,44:95,66:[1,43]},{20:[1,96]},{5:[2,52],8:[2,52],9:[2,52],19:[2,52],20:[2,52],25:[2,52],26:[2,52],29:[2,52],31:[2,52],32:[2,52],33:[2,52],34:[2,52],35:[2,52],36:[2,52],37:[2,52],38:[2,52],39:[2,52],40:[2,52],41:[2,52],43:[2,52],45:[2,52],46:[2,52],47:[2,52],48:[2,52],49:[2,52],50:[2,52],55:[2,52],56:[2,52],57:[2,52],58:[2,52],59:[2,52],60:[2,52],61:[2,52],64:[2,52],67:[2,52]},{5:[2,70],8:[2,70],9:[2,70],19:[2,70],20:[2,70],25:[2,70],26:[2,70],29:[2,70],31:[2,70],32:[2,70],33:[2,70],34:[2,70],35:[2,70],36:[2,70],37:[2,70],38:[2,70],39:[2,70],40:[2,70],41:[2,70],55:[2,70]},{67:[1,97]},{64:[1,98],67:[2,72]},{5:[2,65],8:[2,65],9:[2,65],19:[2,65],20:[2,65],25:[2,65],26:[2,65],29:[2,65],31:[2,65],32:[2,65],33:[2,65],34:[2,65],35:[2,65],36:[2,65],37:[2,65],38:[2,65],39:[2,65],40:[2,65],41:[2,65],43:[2,65],45:[2,65],46:[2,65],47:[2,65],48:[2,65],49:[2,65],50:[2,65],55:[2,65],56:[2,65],57:[2,65],58:[2,65],59:[2,65],60:[2,65],61:[2,65],64:[2,65],67:[2,65]},{9:[1,99]},{9:[2,67],64:[1,100]},{65:[1,101]},{8:[1,50],15:38,19:[1,35],23:102,30:36,44:37,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49],66:[1,43]},{5:[2,18],9:[2,18],19:[2,18],25:[2,18],26:[2,18],29:[2,18],31:[2,18],32:[2,18],33:[2,18],34:[2,18],35:[2,18],36:[2,18],37:[2,18],38:[2,18],39:[2,18],40:[2,18],41:[2,18],55:[2,18]},{8:[1,50],15:38,19:[1,85],30:58,42:103,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{8:[1,50],15:38,19:[1,85],30:58,42:104,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{8:[1,50],15:38,19:[1,85],30:58,42:105,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{8:[1,50],15:38,19:[1,85],30:58,42:106,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{8:[1,50],15:38,19:[1,85],30:58,42:107,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{8:[1,50],15:38,19:[1,85],30:58,42:108,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{8:[1,50],15:38,19:[1,85],30:58,42:109,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{5:[2,34],8:[2,34],9:[2,34],19:[2,34],20:[2,34],25:[2,34],26:[2,34],29:[2,34],31:[2,34],32:[2,34],33:[2,34],34:[2,34],35:[2,34],36:[2,34],37:[2,34],38:[2,34],39:[2,34],40:[2,34],41:[2,34],43:[1,78],45:[1,77],46:[1,79],47:[1,80],55:[2,34],64:[2,34],67:[2,34]},{8:[1,50],12:87,15:90,19:[1,111],20:[1,67],22:12,24:14,29:[1,29],30:58,31:[1,18],32:[1,19],33:[1,20],34:[1,21],35:[1,22],36:[1,23],37:[1,24],38:[1,25],39:[1,26],40:[1,27],41:[1,28],42:110,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{20:[1,112],43:[1,78],45:[1,77],46:[1,79],47:[1,80],48:[1,81],49:[1,82],50:[1,83]},{20:[1,113]},{20:[1,114]},{8:[1,50],12:115,15:90,19:[1,89],20:[1,67],22:12,24:14,27:88,29:[1,29],30:58,31:[1,18],32:[1,19],33:[1,20],34:[1,21],35:[1,22],36:[1,23],37:[1,24],38:[1,25],39:[1,26],40:[1,27],41:[1,28],42:86,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{8:[1,50],15:38,19:[1,35],20:[2,53],23:34,30:36,43:[2,53],44:37,45:[2,53],46:[2,53],47:[2,53],48:[2,53],49:[2,53],50:[2,53],51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49],66:[1,43]},{5:[2,19],9:[2,19],19:[2,19],25:[2,19],26:[2,19],28:[1,116],29:[2,19],31:[2,19],32:[2,19],33:[2,19],34:[2,19],35:[2,19],36:[2,19],37:[2,19],38:[2,19],39:[2,19],40:[2,19],41:[2,19],55:[2,19]},{5:[2,21],9:[2,21],19:[2,21],20:[2,21],25:[2,21],26:[2,21],29:[2,21],31:[2,21],32:[2,21],33:[2,21],34:[2,21],35:[2,21],36:[2,21],37:[2,21],38:[2,21],39:[2,21],40:[2,21],41:[2,21],55:[2,21]},{20:[1,117],44:118,66:[1,43]},{6:119,8:[1,5]},{8:[2,50]},{5:[2,36],9:[2,36],19:[2,36],20:[2,36],25:[2,36],26:[2,36],29:[2,36],31:[2,36],32:[2,36],33:[2,36],34:[2,36],35:[2,36],36:[2,36],37:[2,36],38:[2,36],39:[2,36],40:[2,36],41:[2,36],55:[2,36]},{5:[2,71],8:[2,71],9:[2,71],19:[2,71],20:[2,71],25:[2,71],26:[2,71],29:[2,71],31:[2,71],32:[2,71],33:[2,71],34:[2,71],35:[2,71],36:[2,71],37:[2,71],38:[2,71],39:[2,71],40:[2,71],41:[2,71],55:[2,71]},{8:[1,50],15:38,17:70,19:[1,57],27:56,30:58,42:54,43:[1,55],51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49],68:120},{5:[2,66],8:[2,66],9:[2,66],19:[2,66],20:[2,66],25:[2,66],26:[2,66],29:[2,66],31:[2,66],32:[2,66],33:[2,66],34:[2,66],35:[2,66],36:[2,66],37:[2,66],38:[2,66],39:[2,66],40:[2,66],41:[2,66],43:[2,66],45:[2,66],46:[2,66],47:[2,66],48:[2,66],49:[2,66],50:[2,66],55:[2,66],56:[2,66],57:[2,66],58:[2,66],59:[2,66],60:[2,66],61:[2,66],64:[2,66],67:[2,66]},{52:74,56:[1,47],62:121,63:73},{8:[1,50],15:38,17:122,19:[1,57],27:56,30:58,42:54,43:[1,55],51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{5:[2,16],9:[2,16],19:[2,16],20:[2,16],25:[2,16],26:[2,16],29:[2,16],31:[2,16],32:[2,16],33:[2,16],34:[2,16],35:[2,16],36:[2,16],37:[2,16],38:[2,16],39:[2,16],40:[2,16],41:[2,16],55:[2,16]},{5:[2,39],8:[2,39],9:[2,39],19:[2,39],20:[2,39],25:[2,39],26:[2,39],29:[2,39],31:[2,39],32:[2,39],33:[2,39],34:[2,39],35:[2,39],36:[2,39],37:[2,39],38:[2,39],39:[2,39],40:[2,39],41:[2,39],43:[2,39],45:[2,39],46:[1,79],47:[1,80],48:[2,39],49:[2,39],50:[2,39],55:[2,39],64:[2,39],67:[2,39]},{5:[2,40],8:[2,40],9:[2,40],19:[2,40],20:[2,40],25:[2,40],26:[2,40],29:[2,40],31:[2,40],32:[2,40],33:[2,40],34:[2,40],35:[2,40],36:[2,40],37:[2,40],38:[2,40],39:[2,40],40:[2,40],41:[2,40],43:[2,40],45:[2,40],46:[1,79],47:[1,80],48:[2,40],49:[2,40],50:[2,40],55:[2,40],64:[2,40],67:[2,40]},{5:[2,41],8:[2,41],9:[2,41],19:[2,41],20:[2,41],25:[2,41],26:[2,41],29:[2,41],31:[2,41],32:[2,41],33:[2,41],34:[2,41],35:[2,41],36:[2,41],37:[2,41],38:[2,41],39:[2,41],40:[2,41],41:[2,41],43:[2,41],45:[2,41],46:[2,41],47:[2,41],48:[2,41],49:[2,41],50:[2,41],55:[2,41],64:[2,41],67:[2,41]},{5:[2,42],8:[2,42],9:[2,42],19:[2,42],20:[2,42],25:[2,42],26:[2,42],29:[2,42],31:[2,42],32:[2,42],33:[2,42],34:[2,42],35:[2,42],36:[2,42],37:[2,42],38:[2,42],39:[2,42],40:[2,42],41:[2,42],43:[2,42],45:[2,42],46:[2,42],47:[2,42],48:[2,42],49:[2,42],50:[2,42],55:[2,42],64:[2,42],67:[2,42]},{5:[2,47],8:[2,47],9:[2,47],19:[2,47],20:[2,47],25:[2,47],26:[2,47],29:[2,47],31:[2,47],32:[2,47],33:[2,47],34:[2,47],35:[2,47],36:[2,47],37:[2,47],38:[2,47],39:[2,47],40:[2,47],41:[2,47],43:[1,78],45:[1,77],46:[1,79],47:[1,80],55:[2,47],64:[2,47],67:[2,47]},{5:[2,48],8:[2,48],9:[2,48],19:[2,48],20:[2,48],25:[2,48],26:[2,48],29:[2,48],31:[2,48],32:[2,48],33:[2,48],34:[2,48],35:[2,48],36:[2,48],37:[2,48],38:[2,48],39:[2,48],40:[2,48],41:[2,48],43:[1,78],45:[1,77],46:[1,79],47:[1,80],55:[2,48],64:[2,48],67:[2,48]},{5:[2,49],8:[2,49],9:[2,49],19:[2,49],20:[2,49],25:[2,49],26:[2,49],29:[2,49],31:[2,49],32:[2,49],33:[2,49],34:[2,49],35:[2,49],36:[2,49],37:[2,49],38:[2,49],39:[2,49],40:[2,49],41:[2,49],43:[1,78],45:[1,77],46:[1,79],47:[1,80],55:[2,49],64:[2,49],67:[2,49]},{20:[1,112],43:[1,78],45:[1,77],46:[1,79],47:[1,80]},{8:[1,50],12:115,15:90,19:[1,111],20:[1,67],22:12,24:14,29:[1,29],30:58,31:[1,18],32:[1,19],33:[1,20],34:[1,21],35:[1,22],36:[1,23],37:[1,24],38:[1,25],39:[1,26],40:[1,27],41:[1,28],42:110,51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49]},{5:[2,43],8:[2,43],9:[2,43],19:[2,43],20:[2,43],25:[2,43],26:[2,43],29:[2,43],31:[2,43],32:[2,43],33:[2,43],34:[2,43],35:[2,43],36:[2,43],37:[2,43],38:[2,43],39:[2,43],40:[2,43],41:[2,43],43:[2,43],45:[2,43],46:[2,43],47:[2,43],48:[2,43],49:[2,43],50:[2,43],55:[2,43],64:[2,43],67:[2,43]},{5:[2,44],8:[2,44],9:[2,44],19:[2,44],20:[2,44],25:[2,44],26:[2,44],29:[2,44],31:[2,44],32:[2,44],33:[2,44],34:[2,44],35:[2,44],36:[2,44],37:[2,44],38:[2,44],39:[2,44],40:[2,44],41:[2,44],43:[2,44],45:[2,44],46:[2,44],47:[2,44],48:[2,44],49:[2,44],50:[2,44],55:[2,44],64:[2,44],67:[2,44]},{5:[2,46],8:[2,46],9:[2,46],19:[2,46],20:[2,46],25:[2,46],26:[2,46],29:[2,46],31:[2,46],32:[2,46],33:[2,46],34:[2,46],35:[2,46],36:[2,46],37:[2,46],38:[2,46],39:[2,46],40:[2,46],41:[2,46],55:[2,46],64:[2,46],67:[2,46]},{20:[1,123]},{6:124,8:[1,5]},{6:125,8:[1,5]},{20:[1,126]},{5:[2,13],9:[2,13],19:[2,13],25:[2,13],26:[2,13],29:[2,13],31:[2,13],32:[2,13],33:[2,13],34:[2,13],35:[2,13],36:[2,13],37:[2,13],38:[2,13],39:[2,13],40:[2,13],41:[2,13],55:[2,13]},{67:[2,73]},{9:[2,68]},{9:[2,69],64:[2,69]},{8:[1,50],15:38,19:[1,35],20:[2,44],23:102,30:36,43:[2,44],44:37,45:[2,44],46:[2,44],47:[2,44],48:[2,44],49:[2,44],50:[2,44],51:39,52:40,53:41,54:42,55:[1,17],56:[1,47],57:[1,44],58:[1,45],59:[1,46],60:[1,48],61:[1,49],66:[1,43]},{5:[2,20],9:[2,20],19:[2,20],25:[2,20],26:[2,20],29:[2,20],31:[2,20],32:[2,20],33:[2,20],34:[2,20],35:[2,20],36:[2,20],37:[2,20],38:[2,20],39:[2,20],40:[2,20],41:[2,20],55:[2,20]},{5:[2,12],9:[2,12],19:[2,12],25:[2,12],26:[2,12],29:[2,12],31:[2,12],32:[2,12],33:[2,12],34:[2,12],35:[2,12],36:[2,12],37:[2,12],38:[2,12],39:[2,12],40:[2,12],41:[2,12],55:[2,12]},{8:[2,51]}],
defaultActions: {3:[2,2],4:[2,3],30:[2,1],95:[2,50],120:[2,73],121:[2,68],126:[2,51]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this,
        stack = [0],
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    //this.reductionCount = this.shiftCount = 0;

    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    if (typeof this.lexer.yylloc == 'undefined')
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);

    if (typeof this.yy.parseError === 'function')
        this.parseError = this.yy.parseError;

    function popStack (n) {
        stack.length = stack.length - 2*n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

    function lex() {
        var token;
        token = self.lexer.lex() || 1; // $end = 1
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    };

    var symbol, preErrorSymbol, state, action, a, r, yyval={},p,len,newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length-1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol == null)
                symbol = lex();
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

        // handle parse error
        if (typeof action === 'undefined' || !action.length || !action[0]) {

            if (!recovering) {
                // Report error
                expected = [];
                for (p in table[state]) if (this.terminals_[p] && p > 2) {
                    expected.push("'"+this.terminals_[p]+"'");
                }
                var errStr = '';
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+this.lexer.showPosition()+'\nExpecting '+expected.join(', ');
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == 1 /*EOF*/ ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr,
                    {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol == EOF) {
                    throw new Error(errStr || 'Parsing halted.');
                }

                // discard current lookahead and grab another
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            while (1) {
                // check for error recovery rule in this state
                if ((TERROR.toString()) in table[state]) {
                    break;
                }
                if (state == 0) {
                    throw new Error(errStr || 'Parsing halted.');
                }
                popStack(1);
                state = stack[stack.length-1];
            }

            preErrorSymbol = symbol; // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {

            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(this.lexer.yytext);
                lstack.push(this.lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = this.lexer.yyleng;
                    yytext = this.lexer.yytext;
                    yylineno = this.lexer.yylineno;
                    yyloc = this.lexer.yylloc;
                    if (recovering > 0)
                        recovering--;
                } else { // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2: // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column
                };
                r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3: // accept
                return true;
        }

    }

    return true;
}};/* Jison generated lexer */
var lexer = (function(){

var lexer = ({EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parseError) {
            this.yy.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext+=ch;
        this.yyleng++;
        this.match+=ch;
        this.matched+=ch;
        var lines = ch.match(/\n/);
        if (lines) this.yylineno++;
        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        this._input = ch + this._input;
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            match = this._input.match(this.rules[rules[i]]);
            if (match) {
                lines = match[0].match(/\n.*/g);
                if (lines) this.yylineno += lines.length;
                this.yylloc = {first_line: this.yylloc.last_line,
                               last_line: this.yylineno+1,
                               first_column: this.yylloc.last_column,
                               last_column: lines ? lines[lines.length-1].length-1 : this.yylloc.last_column + match[0].length}
                this.yytext += match[0];
                this.match += match[0];
                this.matches = match;
                this.yyleng = this.yytext.length;
                this._more = false;
                this._input = this._input.slice(match[0].length);
                this.matched += match[0];
                token = this.performAction.call(this, this.yy, this, rules[i],this.conditionStack[this.conditionStack.length-1]);
                if (token) return token;
                else return;
            }
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(), 
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    }});
lexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START
switch($avoiding_name_collisions) {
case 0:/* skip whitespace */
break;
case 1:/* skip comment */
break;
case 2:/* skip comment */
break;
case 3:return 46
break;
case 4:return 47
break;
case 5:return 43
break;
case 6:return 45
break;
case 7:return '^'
break;
case 8:return 64
break;
case 9:return 59
break;
case 10:return 58
break;
case 11:return 60
break;
case 12:return 61
break;
case 13:return 31
break;
case 14:return 32
break;
case 15:return 33
break;
case 16:return 33
break;
case 17:return 34
break;
case 18:return 34
break;
case 19:return 35
break;
case 20:return 35
break;
case 21:return 35
break;
case 22:return 36
break;
case 23:return 36
break;
case 24:return 36
break;
case 25:return 37
break;
case 26:return 38
break;
case 27:return 39
break;
case 28:return 40
break;
case 29:return 41
break;
case 30:return 29
break;
case 31:return 26
break;
case 32:return 28
break;
case 33:return 25
break;
case 34:return 18
break;
case 35:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 56;
break;
case 36:return 57;
break;
case 37:return 55
break;
case 38:return 19
break;
case 39:return 20
break;
case 40:return 8
break;
case 41:return 9
break;
case 42:return 66
break;
case 43:return 67
break;
case 44:return 48
break;
case 45:return 49
break;
case 46:return 50
break;
case 47:return 16
break;
case 48:return 5
break;
case 49:return 'INVALID'
break;
}
};
lexer.rules = [/^\s+/,/^\/\/[^\n]*/,/^#[^\n]*/,/^\*/,/^\//,/^-/,/^\+/,/^\^/,/^,/,/^PI\b/,/^E\b/,/^true\b/,/^false\b/,/^(clearall|clearAll|ca)(\(\))?[\b\s]/,/^(cleardrawing|clearDrawing|cd)(\(\))?[\b\s]/,/^(penup\(\)|penup)[\b\s]/,/^(pu\(\)|pu)[\b\s]/,/^(pendown\(\)|pendown)[\b\s]/,/^(pd\(\)|pd)[\b\s]/,/^(getheading\(\)|getheading)[\b\s]/,/^(gethead\(\)|gethead)[\b\s]/,/^(gh\(\)|gh)[\b\s]/,/^(getposition\(\)|getposition)[\b\s]/,/^(getpos\(\)|getpos)[\b\s]/,/^(gp\(\)|gp)[\b\s]/,/^(getspeed\(\)|getspeed)[\b\s]/,/^(help\(\)|help)[\b\s]/,/^(demo\(\)|demo)[\b\s]/,/^(testcard\(\)|testcard)[\b\s]/,/^(testheading\(\)|testheading)[\b\s]/,/^(set )\b/,/^(if|IF)/,/^(else|ELSE)/,/^(repeat|REPEAT)\b/,/^(function)\b/,/^"(?:\\["bfnrt/\\]|\\u[a-fA-F0-9]{4}|[^"\\])*"/,/^((-?(?:[0-9]|[1-9][0-9]+)(?:\.[0-9]+)?)|(-?(?:[0-9]|[1-9][0-9]+)?(?:\.[0-9]+)))(?:[eE][-+]?[0-9]+)?\b/,/^[a-zA-Z]+([\w.0-9]*)\b/,/^\(/,/^\)/,/^\{/,/^\}/,/^\[/,/^\]/,/^==/,/^</,/^>/,/^=/,/^$/,/^./];
lexer.conditions = {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"inclusive":true}};return lexer;})()
parser.lexer = lexer;
return parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = grammar;
exports.parse = function () { return grammar.parse.apply(grammar, arguments); }
exports.main = function commonjsMain(args) {
    if (!args[1])
        throw new Error('Usage: '+args[0]+' FILE');
    if (typeof process !== 'undefined') {
        var source = require('fs').readFileSync(require('path').join(process.cwd(), args[1]), "utf8");
    } else {
        var cwd = require("file").path(require("file").cwd());
        var source = cwd.join(args[1]).read({charset: "utf-8"});
    }
    return exports.parser.parse(source);
}
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require("system").args);
}
}